#!/bin/bash
set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'

source "${BASH_SOURCE%/*}/includes/utils.sh"

# Get absolute path to this script, resolves symlinks
READ_LINK=$(readlink -m "$0")
# Find working dir by stripping of bin/pilotboat
WORK_DIR=${READ_LINK%bin/pilotboat}
CONTAINER_DIR="${WORK_DIR}containers"
DATABASE_DIR="${WORK_DIR}databases"

ACTION="${1:-}"

if [[ -z "$ACTION" ]]; then
  msg_error "Missing argument"
  usage
  exit 1
fi

case "$ACTION" in
  export)
    CONTAINER_NAME=${2:-}
    if [[ -z "$CONTAINER_NAME" ]]; then
      msg_error "Export requires an container name"
      exit 1
    fi
    if docker-check-existing "$CONTAINER_NAME"; then
      docker-export-container "$CONTAINER_NAME"
    else
      msg_error "No container with name $CONTAINER_NAME"
    fi
    ;;
  start)
    CONTAINER_NAME=${2:-}
    if [[ -z "$CONTAINER_NAME" ]]; then
      msg_error "Start requires an container name"
      exit 1
    fi

    if [[ ! -f ${WORK_DIR}/.setup-ok ]]; then
      msg_info "Starting setup"
      docker-setup
    fi

    docker-stop-all
    docker-start "$CONTAINER_NAME"
    ;;
  db-import)
    DATABASE_NAME=${2:-}
    if [[ -z "$DATABASE_NAME" ]]; then
      msg_error "db-import requires an database name"
      exit 1
    fi

    if [[ ! -f "${DATABASE_DIR}/${DATABASE_NAME}.sql.gz" ]]; then
      msg_error "No database dump exists in ${DATABASE_DIR}/${DATABASE_NAME}.sql.gz"
      exit 1
    fi

    CONTAINER_NAME=$(docker-get-running-container-name)

    docker-exec-in-container "$CONTAINER_NAME" db-import "$DATABASE_NAME"
    ;;
  apache-reload)
    CONTAINER_NAME=$(docker-get-running-container-name)
    docker-exec-in-container "$CONTAINER_NAME" apache-reload
    ;;
  shell)
    CONTAINER_NAME=$(docker-get-running-container-name)
    docker exec -ti "$CONTAINER_NAME" bash
    ;;
  *)
    msg_warning "Unknown action $ACTION"
    usage
    ;;
esac
